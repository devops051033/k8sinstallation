---
- name: Disabling swap...
  hosts: controlplane
  become: yes

  tasks:
    - name: Disable swap
      command: swapoff -a

- name: Setup Kubernetes prerequisites on Ubuntu nodes
  hosts: ubuntu_nodes
  become: yes

  tasks:
    - name: Load kernel modules
      block:
        - name: Create k8s.conf for kernel modules
          copy:
            content: |
              overlay
              br_netfilter
            dest: /etc/modules-load.d/k8s.conf

        - name: Load overlay module
          command: modprobe overlay

        - name: Load br_netfilter module
          command: modprobe br_netfilter

    - name: Configure sysctl
      block:
        - name: Create k8s.conf for sysctl
          copy:
            content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.ipv4.ip_forward                 = 1
            dest: /etc/sysctl.d/k8s.conf

        - name: Apply sysctl params without reboot
          command: sysctl --system

    - name: Verify loaded kernel modules and sysctl settings
      block:
        - name: Verify br_netfilter module
          command: lsmod
          args:
            _raw_params: "| grep br_netfilter"
          register: br_netfilter_output
        - debug:
            msg: "{{ br_netfilter_output.stdout }}"

        - name: Verify overlay module
          command: lsmod
          args:
            _raw_params: "| grep overlay"
          register: overlay_output
        - debug:
            msg: "{{ overlay_output.stdout }}"

        - name: Verify sysctl settings
          command: sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
          register: sysctl_output
        - debug:
            msg: "{{ sysctl_output.stdout }}"

    - name: Install containerd
      block:
        - name: Update apt cache
          apt:
            update_cache: yes

        - name: Install containerd
          apt:
            name: containerd
            state: present

    - name: Configure containerd
      block:
        - name: Create containerd configuration directory
          file:
            path: /etc/containerd
            state: directory

        - name: Generate default containerd config
          command: containerd config default
          register: containerd_default_config

        - name: Write containerd config
          copy:
            content: "{{ containerd_default_config.stdout }}"
            dest: /etc/containerd/config.toml

        - name: Update containerd config to use systemd cgroup
          replace:
            path: /etc/containerd/config.toml
            regexp: 'SystemdCgroup = false'
            replace: 'SystemdCgroup = true'

        - name: Restart containerd
          systemd:
            name: containerd
            state: restarted

        - name: Ensure containerd is running
          systemd:
            name: containerd
            state: started
            enabled: yes
